#include <stdio.h>
#define MAX 10

int main() {
    int n, p[MAX], bt[MAX], tat[MAX], wt[MAX], temp, index;
    int total_tat = 0, total_wt = 0;
    float avg_tat, avg_wt;

    printf("Enter number of processes: ");
    scanf("%d", &n);

    printf("Enter burst time for each process:\n");
    for (int i = 0; i < n; i++) {
        printf("P%d: ", i + 1);
        scanf("%d", &bt[i]);
        p[i] = i + 1;  // Assign process ID
    }

    // Sorting by Burst Time (SJF)
    for (int i = 0; i < n; i++) {
        index = i;
        for (int j = i + 1; j < n; j++) {
            if (bt[j] < bt[index]) {
                index = j;
            }
        }
        // Swap burst time
        temp = bt[i];
        bt[i] = bt[index];
        bt[index] = temp;

        // Swap process ID
        temp = p[i];
        p[i] = p[index];
        p[index] = temp;
    }

    // Calculating Waiting Time
    wt[0] = 0;  // First process has 0 waiting time
    for (int i = 1; i < n; i++) {
        wt[i] = 0;
        for (int j = 0; j < i; j++) {
            wt[i] += bt[j];
        }
        total_wt += wt[i];
    }

    // Calculating Turnaround Time
    for (int i = 0; i < n; i++) {
        tat[i] = bt[i] + wt[i];
        total_tat += tat[i];
    }

    avg_wt = (float) total_wt / n;
    avg_tat = (float) total_tat / n;

    // Printing Results
    printf("\nProcess\tBT\tWT\tTAT\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\n", p[i], bt[i], wt[i], tat[i]);
    }

    printf("\nAverage Waiting Time: %.2f\n", avg_wt);
    printf("Average Turnaround Time: %.2f\n", avg_tat);

    return 0;
}
